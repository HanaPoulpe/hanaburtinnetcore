name: "python-tests"
run-name: "python-tests"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  python-tests:
    runs-on: "ubuntu-latest"
    container: "python:3.11-slim-bookworm"
    services:
      postgres:
        image: "postgres:15"
        ports:
          - 5432/tcp
        env:
          POSTGRES_PASSWORD: "postgres"
        # Ensure Postgres is available
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DJANGO_CONFIGURATION: "Base"
      DJANGO_SETTINGS_MODULE: "queenbees.settings"
      CORE_DATABASE_NAME: "postgres"
      CORE_DATABASE_HOST: "postgres"
      CORE_DATABASE_USER: "postgres"
      CORE_DATABASE_PASSWORD: "postgres"
      CORE_DATABASE_PORT: "5432"

    steps:
      - name: Install git
        run: apt update && apt install git -y

      - name: Checkout
        uses: actions/checkout@v4

      - name: Changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: '**/*.py'

      - run: touch src/.env

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Install npm
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Build webpack
        run: npm install && npm run build
        working-directory: src/queenbees/interfaces/backoffice/static_src

      - name: Run python typing
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: poetry run python-type-checker ${{ steps.changed-files.outputs.all_changed_files }}

      - name: Run python isort
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: poetry run python-linter-isort --check ${{ steps.changed-files.outputs.all_changed_files }}

      - name: Run black
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: poetry run python-linter-black --check ${{ steps.changed-files.outputs.all_changed_files }}

      - name: Run import-linter
        run: poetry run python-import-linter

      - name: Run Unit tests
        run: poetry run python-tests-unit

      - name: Run interface agnostic tests
        run: poetry run python-tests-interface-agnostic

      - name: Run backoffice tests
        run: poetry run python-tests-backoffice
