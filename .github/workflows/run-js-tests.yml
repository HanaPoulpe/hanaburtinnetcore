name: "js-tests"
run-name: "js-tests"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: "ubuntu-latest"
    container: "python:3.11-bookworm"
    services:
      postgres:
        image: "postgres:15"
        ports:
          - 5432/tcp
        env:
          POSTGRES_PASSWORD: "postgres"
        # Ensure Postgres is available
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DJANGO_CONFIGURATION: "Base"
      DJANGO_SETTINGS_MODULE: "backoffice.settings"
      CORE_DATABASE_NAME: "postgres"
      CORE_DATABASE_HOST: "postgres"
      CORE_DATABASE_USER: "postgres"
      CORE_DATABASE_PASSWORD: "postgres"
      CORE_DATABASE_PORT: "5432"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: touch src/.env

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install --without=test
          poetry export > requirements.txt
          pip install -r requirements.txt
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
          export NVM_DIR=$HOME/.nvm
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install 20.9.0
          npm install
          poetry run install-frontend-requirements --test

      - name: Run eslint
        run: |
          export NVM_DIR=$HOME/.nvm
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          npm run eslint

      - name: Run JS tests
        run: poetry run js-tests
