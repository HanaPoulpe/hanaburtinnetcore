[pytest]
env =
    DJANGO_SETTINGS_MODULE=tests.settings
    DJANGO_CONFIGURATION=BaseTest

python_files = test_*.py

testpaths = tests

# Default options when pytest is run:
#
#   --verbose        -> Show names of tests being run.
#   --tb=short       -> Use short tracebacks.
#                     https://docs.pytest.org/en/stable/usage.html#modifying-python-traceback-printing
#   --nomigrations   -> Disable Django's migrations and create the database by inspecting models instead.
#                     https://pytest-django.readthedocs.io/en/latest/database.html#nomigrations-disable-django-migrations
#   --reuse-db       -> Don't remove test database after each test run so it can be re-used next time.
#                     https://pytest-django.readthedocs.io/en/latest/database.html#reuse-db-reuse-the-testing-database-between-test-runs
#   --color=auto     -> Detect whether to print colored output.
#   --capture=fd     -> Capture all output written to the STDOUT and STDERR file descriptors.
#                     https://docs.pytest.org/en/stable/capture.html
#   --disable-socket ->  Disable all network requests in tests
#   --allows-hosts   -> Allow network requests only to the given host(s). Work together with the previous disable-soket, IPV6 and IPV4 localhost is allowed
#   --strict-markers -> Disallow unregistered pytest marks
addopts = --verbose --color=auto --capture=fd --nomigrations --reuse-db

markers =
    need_attention: the test looks flakey and needs to be fixed

xfail_strict = true
