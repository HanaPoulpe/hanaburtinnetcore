[tool.poetry]
name = "Queenbees"
version = "0.1.0"
description = ""
authors = ["HanaPoulpe <hana@hanapoulpe.org>"]
readme = "README.md"

[tool.black]
line-length = 99
skip-numeric-underscore-normalization = 1
exclude = '(node_modules|migrations/)'
# diff = true

[tool.isort]
multi_line_output = 3
include_trailing_comma = "True"
force_grid_wrap = 0
known_first_party = "queenbees,tests"
default_section = "THIRDPARTY"
use_parentheses = "True"
line_length = 99
skip_glob="**/node_modules/*, **/migrations/**"
src_paths = "src"

[tool.mypy]
python_version = "3.11"
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = false
warn_redundant_casts = true
warn_unreachable = true
warn_incomplete_stub = true
ignore_missing_imports = true
plugins = [
    "./src/configurations_mypy_django_plugin.py"
]

[tool.django-stubs]
django_settings_module = "queenbees.settings"

[tool.flake8]
per-file-ignores = [
    '__init__.py:F401',
]
max-line-length = 99
count = true

[tool.importlinter]
root_package = "queenbees"
include_external_packages = "True"

[[tool.importlinter.contracts]]
name = "Forbidden import tests import"
type = "forbidden"
source_modules = [
    "queenbees"
]
forbidden_modules = [
    "tests",
    "pytest",
    "factory"
]

[[tool.importlinter.contracts]]
name = "Forbidden utils imports"
type = "forbidden"
source_modules = [
    "queenbees.utils"
]
forbidden_modules = [
    "queenbees.core",
    "queenbees.interfaces"
]

[[tool.importlinter.contracts]]
name = "Queenbees layers"
type = "layers"
layers = [
    "queenbees.interfaces",
    "queenbees.core"
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Commands
[tool.poetry.scripts]
python-linter-isort = "poetry:run_isort"
python-linter-black = "poetry:run_black"
python-type-checker = "poetry:run_mypy"
python-import-linter = "poetry:run_import_linter"
python-linters = "poetry:run_linters"

# Python Tests
python-tests = "poetry:run_python_tests"
python-tests-files = "poetry:run_tests_for_file"
python-tests-all = "poetry:run_all_python_tests"
python-tests-unit = "poetry:run_unit_tests"
python-tests-interface-agnostic = "poetry:run_interface_agnostic_tests"
python-tests-backoffice = "poetry:run_backoffice_tests"

# Frontend
frontend-build = "poetry:build_frontend"

install-frontend-requirements = "poetry:install_frontend_requirements"
js-linter = "poetry:run_eslint"
js-tests = "poetry:run_js_tests"

# Servers
backoffice-start = "poetry:run_backoffice_server"
createsuperuser = "poetry:create_superuser"

# Docker
docker-build = "poetry:build_docker_compose"
docker-start = "poetry:start_docker_compose"
docker-stop = "poetry:stop_docker_compose"
docker-migrate = "poetry:docker_run_migrations"

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.0"
pytz = "^2024.1"
django-configurations = "^2.5"
pytest-env = "^1.1.3"
attr = "^0.3.2"
python-dotenv = "^1.0.1"
psycopg2-binary = "^2.9.9"
python-webpack-boilerplate = "^1.0.2"
nvshim = "^1.1.2"
faker = "^24.1.0"
import-linter = "^2.0"

[tool.poetry.group.test.dependencies]
isort = "^5.13.2"
black = "^24.2.0"
mypy ="^1.9.0"
django-stubs = "^4.2.7"
pytest = "^8.1.1"
pytest-django = "^4.8.0"
hypothesis = "^6.98.17"
pytest-env = "^1.1.3"
time-machine = "^2.14.0"
factory-boy = "^3.3.0"
commit-linter = "^1.0.3"
python-lorem = "^1.3.0.post1"
