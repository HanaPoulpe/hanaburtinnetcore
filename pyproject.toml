[tool.poetry]
name = "hanaburtincore"
version = "0.1.0"
description = ""
authors = ["HanaPoulpe <hana@hanapoulpe.org>"]
readme = "README.md"

[tool.black]
line-length = 99
skip-numeric-underscore-normalization = 1
exclude = '(node_modules|migrations/)'
# diff = true

[tool.isort]
multi_line_output = 3
include_trailing_comma = "True"
force_grid_wrap = 0
known_first_party = "backoffice,hanaburtincore,tests"
default_section = "THIRDPARTY"
use_parentheses = "True"
line_length = 99
skip_glob="**/node_modules/*, **/migrations/**"
src_paths = "src"

[tool.mypy]
python_version = "3.11"
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = false
featwarn_redundant_casts = true
warn_unreachable = true
warn_incomplete_stub = true
ignore_missing_imports = true
plugins = [
    "./src/configurations_mypy_django_plugin.py"
]

[tool.django-stubs]
django_settings_module = "backoffice.settings"

[tool.flake8]
per-file-ignores = [
    '__init__.py:F401',
]
max-line-length = 99
count = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Commands
[tool.poetry.scripts]
python-linter-isort = "poetry:run_isort"
python-linter-black = "poetry:run_black"
python-type-checker = "poetry:run_mypy"
python-linters = "poetry:run_linters"

python-tests = "poetry:run_python_tests"

backoffice-start = "poetry:run_backoffice_server"

[tool.poetry.dependencies]
python = "^3.11"
django = "^4.2.3"
pytz = "^2023.3"
django-configurations = "^2.4.1"
pytest-env = "^0.8.2"
attr = "^0.3.2"
python-dotenv = "^1.0.0"

[tool.poetry.group.test.dependencies]
isort = "^5.12.0"
black = "^23.3.0"
mypy ="^1.4.1"
django-stubs = "^4.2.3"
pytest = "^7.4.0"
pytest-django = "^4.5.2"
hypothesis = "^6.81.1"
pytest-env = "^0.8.2"
time-machine = "^2.11.0"
factory-boy = "^3.3.0"
commit-linter = "^1.0.2"
